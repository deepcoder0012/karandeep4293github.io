              
        #include stdio.h>

        int main() {
            int vertices, edges;
        
            printf("Enter the number of vertices in the graph: ");
            scanf("%d", &vertices);
        
            printf("Enter the number of edges in the graph: ");
            scanf("%d", &edges);
        
            int adjacencyMatrix[vertices][vertices];
        
            // Initialize the adjacency matrix with all zeros
            for (int i = 0; i < vertices; i++) {
                for (int j = 0; j < vertices; j++) {
                    adjacencyMatrix[i][j] = 0;
                }
            }
        
            // Input edges and update the adjacency matrix
            for (int i = 0; i < edges; i++) {
                int source, destination;
                printf("Enter edge %d (source destination): ", i + 1);
                scanf("%d %d", &source, &destination);
        
                if (source >= 0 && source < vertices && destination >= 0 && destination < vertices) {
                    adjacencyMatrix[source][destination] = 1;
                    adjacencyMatrix[destination][source] = 1; // For undirected graph
                } else {
                    printf("Invalid vertex indices. Please enter valid indices.\n");
                    i--; // Decrement i to re-enter the edge
                }
            }
        
            // Print the adjacency matrix
            printf("Adjacency Matrix:\n");
            for (int i = 0; i < vertices; i++) {
                for (int j = 0; j < vertices; j++) {
                    printf("%d ", adjacencyMatrix[i][j]);
                }
                printf("\n");
            }
        
            return 0;
        }
          
output
           
            Enter the number of vertices in the graph: 5
            Enter the number of edges in the graph: 7
            Enter edge 1 (source destination): 0 1
            Enter edge 2 (source destination): 0 2
            Enter edge 3 (source destination): 1 2
            Enter edge 4 (source destination): 1 3
            Enter edge 5 (source destination): 3 4
            Enter edge 6 (source destination): 4 2
            Enter edge 7 (source destination): 2 0
            
            Adjacency Matrix:
            0 1 1 0 0
            1 0 1 1 0
            1 1 0 1 1
            0 1 1 0 1
            0 0 1 1 0                     
                              