 #include 

        void depthFirstSearch(int vertex, int V, int adjacencyMatrix[V][V], int visited[]) {
            printf("%d ", vertex);
            visited[vertex] = 1;
            
            for (int i = 0; i < V; i++) {
                if (adjacencyMatrix[vertex][i] == 1 && !visited[i]) {
                    depthFirstSearch(i, V, adjacencyMatrix, visited);
                }
            }
        }
        
        int main() {
            int V;
            
            printf("Enter the number of vertices: ");
            scanf("%d", &V);
            
            int adjacencyMatrix[V][V];
            
            printf("Enter the adjacency matrix (%d x %d):\n", V, V);
            for (int i = 0; i < V; i++) {
                for (int j = 0; j < V; j++) {
                    scanf("%d", &adjacencyMatrix[i][j]);
                }
            }
            
            int visited[V];
            for (int i = 0; i < V; i++) {
                visited[i] = 0;
            }
            
            printf("Enter the starting vertex for DFS: ");
            int startVertex;
            scanf("%d", &startVertex);
            
            printf("Depth-First Search Traversal starting from vertex %d: ", startVertex);
            depthFirstSearch(startVertex, V, adjacencyMatrix, visited);
            printf("\n");
            
            return 0;
        }
        


                
output
           
            Enter the number of vertices: 5
                        Enter the adjacency matrix (5 x 5):
                        0 1 1 0 0
                        1 0 0 1 0
                        1 0 0 0 1
                        0 1 0 0 0
                        0 0 1 0 0
                        Enter the starting vertex for DFS: 0
                        Depth-First Search Traversal starting from vertex 0: 0 1 3 2 4