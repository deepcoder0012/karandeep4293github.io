#include<stdio.h>
#define n 5
void enqueue();
void dequeue();
void peek();
void isEmpty();
void isFull();
struct q{
    char str[10];
};
struct q queue[n];
int front=-1,rear=-1;
void main(){
    int option;
    while(1){
        printf("\n1)enqueue 2)dequeue 3)peek 4)isEmpty 5)isFull 6)exit || Enter : ");
        scanf("%d",&option);
        if(option<1 || option>6) printf("\nInvalid option!!");
        else if(option==1) enqueue();
        else if(option==2) dequeue();
        else if(option==3) peek();
        else if(option==4) isEmpty();
        else if(option==5) isFull();
        else break;
    }
}

void enqueue(){
    if(rear==n-1) printf("\n String not inserted as Queue is full");
    else{
        if(front==-1) front=0;
        rear++;
        printf("\nEnter value : ");
        scanf("%s",queue[rear].str);
    }
}
void dequeue(){
    if(front==-1 || front>rear) printf("\nQueue is Empty");
    else front++;
}
void peek(){
    if(front==-1 || front>rear) printf("\nNothing in Queue");
    else printf("\npeek : %s",queue[front].str);
}
void isEmpty(){
    if(front==-1 || front>rear) printf("\nQueue is Empty");
    else printf("\nQueue is not Empty");
}
void isFull(){
    if(rear==n-1) printf("\nQueue is full");
    else printf("\nQueue is not full");
}


    ---OUTPUT---
1)enqueue 2)dequeue 3)peek 4)isEmpty 5)isFull 6)exit || Enter : 1

Enter value : kartik

1)enqueue 2)dequeue 3)peek 4)isEmpty 5)isFull 6)exit || Enter : 1

Enter value : sonu

1)enqueue 2)dequeue 3)peek 4)isEmpty 5)isFull 6)exit || Enter : 2

1)enqueue 2)dequeue 3)peek 4)isEmpty 5)isFull 6)exit || Enter : 3

peek : sonu
1)enqueue 2)dequeue 3)peek 4)isEmpty 5)isFull 6)exit || Enter : 6

    